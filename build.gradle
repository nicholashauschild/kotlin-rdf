buildscript {
    ext.kotlin_version = '1.1.3-2'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

plugins {
    // kotlin lang
    id 'org.jetbrains.kotlin.jvm' version '1.1.3-2'

    // publishing
    id "com.jfrog.bintray" version "1.7.3"
    id "com.jfrog.artifactory" version "4.4.18"
}

apply plugin: 'maven-publish'
apply plugin: 'org.junit.platform.gradle.plugin'


/**
 * Property definitions
 */

group = 'com.github.nicholashauschild'
version = file('version.txt').text.trim()
sourceCompatibility = 1.8

def bintrayUsername = hasProperty('bintray_username') ? project.getProperty('bintray_username') : ''
def bintrayApiKey = hasProperty('bintray_apikey') ? project.getProperty('bintray_apikey') : ''
def isSnapshot = version.endsWith('SNAPSHOT')
def isRelease = !isSnapshot


/**
 * Dependencies
 */

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.jena:apache-jena-libs:3.4.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M4'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.2'

    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.2'
}


/**
 * Kotlin configuration
 */

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


/**
 * Testing configuration
 */

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}


/**
 * Wrapper configuration
 */

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}


/**
 * Artifact configuration
 */

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    jar
    archives sourcesJar
    archives javadocJar
}


/**
 * Publishing configuration
 */

def pomConfig = {
    name 'kotlin-rdf'
    url 'https://github.com/nicholashauschild/kotlin-rdf'
    licenses {
        license {
            name 'MIT License'
            url 'https://opensource.org/licenses/mit-license.php'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'nicholashauschild'
            name 'Nicholas Hauschild'
            email 'nicholas.hauschild@gmail.com'
        }
    }
}

publishing {
    publications {
        theJar(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'RDF DSL\'s written in Kotlin')
                root.children().last() + pomConfig
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = bintrayUsername
            password = bintrayApiKey
        }
        defaults {
            publications 'theJar'
        }
    }
}

bintray {
    //user = bintrayUsername
    //key = bintrayApiKey

    publications = ['theJar']
    publish = true

    pkg {
        repo = 'maven'
        name = 'kotlin-rdf'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/nicholashauschild/kotlin-rdf.git'

        desc = 'RDF DSL\'s written in Kotlin'
        labels = ['kotlin', 'rdf', 'dsl']
        websiteUrl = 'https://github.com/nicholashauschild/kotlin-rdf'
        issueTrackerUrl = 'https://github.com/nicholashauschild/kotlin-rdf/issues'
    }
}
